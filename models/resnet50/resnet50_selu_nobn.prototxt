name: "Resnet50_SELU_NOBN"

# n:  ch	:  s	:  g	: skip	:
# 0:  64	:  3	:  1	:  0	:
# 1:  128	:  4	:  1	:  1	:
# 2:  256	:  6	:  1	:  1	:
# 3:  512	:  3	:  1	:  1	:

layer {
  name: "data"
  type: "Data"
  top: "data"
  top: "label"
  data_param {
    source: "examples/imagenet/ilsvrc12_train_lmdb"
    backend: LMDB
    batch_size: 256
    cache: true
    shuffle: true
  }
  transform_param {
    mean_file: "data/ilsvrc12/imagenet_mean.binaryproto"
    crop_size: 224
    mirror: true
    scale: 0.00390625
  }
  include: { phase: TRAIN }
}
layer {
  name: "data"
  type: "Data"
  top: "data"
  top: "label"
  data_param {
    source: "examples/imagenet/ilsvrc12_val_lmdb"
    backend: LMDB
    batch_size: 32
  }
  transform_param {
    mean_file: "data/ilsvrc12/imagenet_mean.binaryproto"
    crop_size: 224
    mirror: false
    scale: 0.00390625
  }
  include: { phase: TEST }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  convolution_param {
    num_output: 64
    kernel_size: 7
    pad: 3
    stride: 2
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "conv1/selu"
  type: "ELU"
  bottom: "conv1"
  top: "conv1"
  elu_param {
    alpha: 1.6733
    lambda: 1.0507
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
#
# res2
#
layer {
  name: "res2.1.conv1"
  type: "Convolution"
  bottom: "pool1"
  top: "res2.1.conv1"
  convolution_param {
    num_output: 64
    kernel_size: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "res2.1.conv1/selu"
  type: "ELU"
  bottom: "res2.1.conv1"
  top: "res2.1.conv1"
  elu_param {
    alpha: 1.6733
    lambda: 1.0507
  }
}
layer {
  name: "res2.1.conv2"
  type: "Convolution"
  bottom: "res2.1.conv1"
  top: "res2.1.conv2"
  convolution_param {
    num_output: 64
    kernel_size: 3
    pad: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "res2.1.conv2/selu"
  type: "ELU"
  bottom: "res2.1.conv2"
  top: "res2.1.conv2"
  elu_param {
    alpha: 1.6733
    lambda: 1.0507
  }
}
layer {
  name: "res2.1.conv3"
  type: "Convolution"
  bottom: "res2.1.conv2"
  top: "res2.1.conv3"
  convolution_param {
    num_output: 256
    kernel_size: 1
    weight_filler {
      type: "msra"
    }
    bias_term: false
  }
}
layer {
  name: "res2.1.skipConv"
  type: "Convolution"
  bottom: "pool1"
  top: "res2.1.skipConv"
  convolution_param {
    num_output: 256
    kernel_size: 1
    weight_filler {
      type: "msra"
    }
    bias_term: false
  }
}
layer {
  name: "res2.1.sum"
  type: "Eltwise"
  bottom: "res2.1.conv3"
  bottom: "res2.1.skipConv"
  top: "res2.1.sum"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "res2.1.selu"
  type: "ELU"
  bottom: "res2.1.sum"
  top: "res2.1.sum"
  elu_param {
    alpha: 1.6733
    lambda: 1.0507
  }
}
layer {
  name: "res2.2.conv1"
  type: "Convolution"
  bottom: "res2.1.sum"
  top: "res2.2.conv1"
  convolution_param {
    num_output: 64
    kernel_size: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "res2.2.conv1/selu"
  type: "ELU"
  bottom: "res2.2.conv1"
  top: "res2.2.conv1"
  elu_param {
    alpha: 1.6733
    lambda: 1.0507
  }
}
layer {
  name: "res2.2.conv2"
  type: "Convolution"
  bottom: "res2.2.conv1"
  top: "res2.2.conv2"
  convolution_param {
    num_output: 64
    kernel_size: 3
    pad: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "res2.2.conv2/selu"
  type: "ELU"
  bottom: "res2.2.conv2"
  top: "res2.2.conv2"
  elu_param {
    alpha: 1.6733
    lambda: 1.0507
  }
}
layer {
  name: "res2.2.conv3"
  type: "Convolution"
  bottom: "res2.2.conv2"
  top: "res2.2.conv3"
  convolution_param {
    num_output: 256
    kernel_size: 1
    weight_filler {
      type: "msra"
    }
    bias_term: false
  }
}
layer {
  name: "res2.2.sum"
  type: "Eltwise"
  bottom: "res2.2.conv3"
  bottom: "res2.1.sum"
  top: "res2.2.sum"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "res2.2.selu"
  type: "ELU"
  bottom: "res2.2.sum"
  top: "res2.2.sum"
  elu_param {
    alpha: 1.6733
    lambda: 1.0507
  }
}
layer {
  name: "res2.3.conv1"
  type: "Convolution"
  bottom: "res2.2.sum"
  top: "res2.3.conv1"
  convolution_param {
    num_output: 64
    kernel_size: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "res2.3.conv1/selu"
  type: "ELU"
  bottom: "res2.3.conv1"
  top: "res2.3.conv1"
  elu_param {
    alpha: 1.6733
    lambda: 1.0507
  }
}
layer {
  name: "res2.3.conv2"
  type: "Convolution"
  bottom: "res2.3.conv1"
  top: "res2.3.conv2"
  convolution_param {
    num_output: 64
    kernel_size: 3
    pad: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "res2.3.conv2/selu"
  type: "ELU"
  bottom: "res2.3.conv2"
  top: "res2.3.conv2"
  elu_param {
    alpha: 1.6733
    lambda: 1.0507
  }
}
layer {
  name: "res2.3.conv3"
  type: "Convolution"
  bottom: "res2.3.conv2"
  top: "res2.3.conv3"
  convolution_param {
    num_output: 256
    kernel_size: 1
    weight_filler {
      type: "msra"
    }
    bias_term: false
  }
}
layer {
  name: "res2.3.sum"
  type: "Eltwise"
  bottom: "res2.3.conv3"
  bottom: "res2.2.sum"
  top: "res2.3.sum"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "res2.3.selu"
  type: "ELU"
  bottom: "res2.3.sum"
  top: "res2.3.sum"
  elu_param {
    alpha: 1.6733
    lambda: 1.0507
  }
}
#
# res3
#
layer {
  name: "res3.1.conv1"
  type: "Convolution"
  bottom: "res2.3.sum"
  top: "res3.1.conv1"
  convolution_param {
    num_output: 128
    kernel_size: 1
    stride: 2
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "res3.1.conv1/selu"
  type: "ELU"
  bottom: "res3.1.conv1"
  top: "res3.1.conv1"
  elu_param {
    alpha: 1.6733
    lambda: 1.0507
  }
}
layer {
  name: "res3.1.conv2"
  type: "Convolution"
  bottom: "res3.1.conv1"
  top: "res3.1.conv2"
  convolution_param {
    num_output: 128
    kernel_size: 3
    pad: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "res3.1.conv2/selu"
  type: "ELU"
  bottom: "res3.1.conv2"
  top: "res3.1.conv2"
  elu_param {
    alpha: 1.6733
    lambda: 1.0507
  }
}
layer {
  name: "res3.1.conv3"
  type: "Convolution"
  bottom: "res3.1.conv2"
  top: "res3.1.conv3"
  convolution_param {
    num_output: 512
    kernel_size: 1
    weight_filler {
      type: "msra"
    }
    bias_term: false
  }
}
layer {
  name: "res3.1.skipConv"
  type: "Convolution"
  bottom: "res2.3.sum"
  top: "res3.1.skipConv"
  convolution_param {
    num_output: 512
    kernel_size: 1
    stride: 2
    weight_filler {
      type: "msra"
    }
    bias_term: false
  }
}
layer {
  name: "res3.1.sum"
  type: "Eltwise"
  bottom: "res3.1.conv3"
  bottom: "res3.1.skipConv"
  top: "res3.1.sum"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "res3.1.selu"
  type: "ELU"
  bottom: "res3.1.sum"
  top: "res3.1.sum"
  elu_param {
    alpha: 1.6733
    lambda: 1.0507
  }
}
layer {
  name: "res3.2.conv1"
  type: "Convolution"
  bottom: "res3.1.sum"
  top: "res3.2.conv1"
  convolution_param {
    num_output: 128
    kernel_size: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "res3.2.conv1/selu"
  type: "ELU"
  bottom: "res3.2.conv1"
  top: "res3.2.conv1"
  elu_param {
    alpha: 1.6733
    lambda: 1.0507
  }
}
layer {
  name: "res3.2.conv2"
  type: "Convolution"
  bottom: "res3.2.conv1"
  top: "res3.2.conv2"
  convolution_param {
    num_output: 128
    kernel_size: 3
    pad: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "res3.2.conv2/selu"
  type: "ELU"
  bottom: "res3.2.conv2"
  top: "res3.2.conv2"
  elu_param {
    alpha: 1.6733
    lambda: 1.0507
  }
}
layer {
  name: "res3.2.conv3"
  type: "Convolution"
  bottom: "res3.2.conv2"
  top: "res3.2.conv3"
  convolution_param {
    num_output: 512
    kernel_size: 1
    weight_filler {
      type: "msra"
    }
    bias_term: false
  }
}
layer {
  name: "res3.2.sum"
  type: "Eltwise"
  bottom: "res3.2.conv3"
  bottom: "res3.1.sum"
  top: "res3.2.sum"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "res3.2.selu"
  type: "ELU"
  bottom: "res3.2.sum"
  top: "res3.2.sum"
  elu_param {
    alpha: 1.6733
    lambda: 1.0507
  }
}
layer {
  name: "res3.3.conv1"
  type: "Convolution"
  bottom: "res3.2.sum"
  top: "res3.3.conv1"
  convolution_param {
    num_output: 128
    kernel_size: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "res3.3.conv1/selu"
  type: "ELU"
  bottom: "res3.3.conv1"
  top: "res3.3.conv1"
  elu_param {
    alpha: 1.6733
    lambda: 1.0507
  }
}
layer {
  name: "res3.3.conv2"
  type: "Convolution"
  bottom: "res3.3.conv1"
  top: "res3.3.conv2"
  convolution_param {
    num_output: 128
    kernel_size: 3
    pad: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "res3.3.conv2/selu"
  type: "ELU"
  bottom: "res3.3.conv2"
  top: "res3.3.conv2"
  elu_param {
    alpha: 1.6733
    lambda: 1.0507
  }
}
layer {
  name: "res3.3.conv3"
  type: "Convolution"
  bottom: "res3.3.conv2"
  top: "res3.3.conv3"
  convolution_param {
    num_output: 512
    kernel_size: 1
    weight_filler {
      type: "msra"
    }
    bias_term: false
  }
}
layer {
  name: "res3.3.sum"
  type: "Eltwise"
  bottom: "res3.3.conv3"
  bottom: "res3.2.sum"
  top: "res3.3.sum"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "res3.3.selu"
  type: "ELU"
  bottom: "res3.3.sum"
  top: "res3.3.sum"
  elu_param {
    alpha: 1.6733
    lambda: 1.0507
  }
}
layer {
  name: "res3.4.conv1"
  type: "Convolution"
  bottom: "res3.3.sum"
  top: "res3.4.conv1"
  convolution_param {
    num_output: 128
    kernel_size: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "res3.4.conv1/selu"
  type: "ELU"
  bottom: "res3.4.conv1"
  top: "res3.4.conv1"
  elu_param {
    alpha: 1.6733
    lambda: 1.0507
  }
}
layer {
  name: "res3.4.conv2"
  type: "Convolution"
  bottom: "res3.4.conv1"
  top: "res3.4.conv2"
  convolution_param {
    num_output: 128
    kernel_size: 3
    pad: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "res3.4.conv2/selu"
  type: "ELU"
  bottom: "res3.4.conv2"
  top: "res3.4.conv2"
  elu_param {
    alpha: 1.6733
    lambda: 1.0507
  }
}
layer {
  name: "res3.4.conv3"
  type: "Convolution"
  bottom: "res3.4.conv2"
  top: "res3.4.conv3"
  convolution_param {
    num_output: 512
    kernel_size: 1
    weight_filler {
      type: "msra"
    }
    bias_term: false
  }
}
layer {
  name: "res3.4.sum"
  type: "Eltwise"
  bottom: "res3.4.conv3"
  bottom: "res3.3.sum"
  top: "res3.4.sum"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "res3.4.selu"
  type: "ELU"
  bottom: "res3.4.sum"
  top: "res3.4.sum"
  elu_param {
    alpha: 1.6733
    lambda: 1.0507
  }
}
#
# res4
#
layer {
  name: "res4.1.conv1"
  type: "Convolution"
  bottom: "res3.4.sum"
  top: "res4.1.conv1"
  convolution_param {
    num_output: 256
    kernel_size: 1
    stride: 2
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "res4.1.conv1/selu"
  type: "ELU"
  bottom: "res4.1.conv1"
  top: "res4.1.conv1"
  elu_param {
    alpha: 1.6733
    lambda: 1.0507
  }
}
layer {
  name: "res4.1.conv2"
  type: "Convolution"
  bottom: "res4.1.conv1"
  top: "res4.1.conv2"
  convolution_param {
    num_output: 256
    kernel_size: 3
    pad: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "res4.1.conv2/selu"
  type: "ELU"
  bottom: "res4.1.conv2"
  top: "res4.1.conv2"
  elu_param {
    alpha: 1.6733
    lambda: 1.0507
  }
}
layer {
  name: "res4.1.conv3"
  type: "Convolution"
  bottom: "res4.1.conv2"
  top: "res4.1.conv3"
  convolution_param {
    num_output: 1024
    kernel_size: 1
    weight_filler {
      type: "msra"
    }
    bias_term: false
  }
}
layer {
  name: "res4.1.skipConv"
  type: "Convolution"
  bottom: "res3.4.sum"
  top: "res4.1.skipConv"
  convolution_param {
    num_output: 1024
    kernel_size: 1
    stride: 2
    weight_filler {
      type: "msra"
    }
    bias_term: false
  }
}
layer {
  name: "res4.1.sum"
  type: "Eltwise"
  bottom: "res4.1.conv3"
  bottom: "res4.1.skipConv"
  top: "res4.1.sum"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "res4.1.selu"
  type: "ELU"
  bottom: "res4.1.sum"
  top: "res4.1.sum"
  elu_param {
    alpha: 1.6733
    lambda: 1.0507
  }
}
layer {
  name: "res4.2.conv1"
  type: "Convolution"
  bottom: "res4.1.sum"
  top: "res4.2.conv1"
  convolution_param {
    num_output: 256
    kernel_size: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "res4.2.conv1/selu"
  type: "ELU"
  bottom: "res4.2.conv1"
  top: "res4.2.conv1"
  elu_param {
    alpha: 1.6733
    lambda: 1.0507
  }
}
layer {
  name: "res4.2.conv2"
  type: "Convolution"
  bottom: "res4.2.conv1"
  top: "res4.2.conv2"
  convolution_param {
    num_output: 256
    kernel_size: 3
    pad: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "res4.2.conv2/selu"
  type: "ELU"
  bottom: "res4.2.conv2"
  top: "res4.2.conv2"
  elu_param {
    alpha: 1.6733
    lambda: 1.0507
  }
}
layer {
  name: "res4.2.conv3"
  type: "Convolution"
  bottom: "res4.2.conv2"
  top: "res4.2.conv3"
  convolution_param {
    num_output: 1024
    kernel_size: 1
    weight_filler {
      type: "msra"
    }
    bias_term: false
  }
}
layer {
  name: "res4.2.sum"
  type: "Eltwise"
  bottom: "res4.2.conv3"
  bottom: "res4.1.sum"
  top: "res4.2.sum"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "res4.2.selu"
  type: "ELU"
  bottom: "res4.2.sum"
  top: "res4.2.sum"
  elu_param {
    alpha: 1.6733
    lambda: 1.0507
  }
}
layer {
  name: "res4.3.conv1"
  type: "Convolution"
  bottom: "res4.2.sum"
  top: "res4.3.conv1"
  convolution_param {
    num_output: 256
    kernel_size: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "res4.3.conv1/selu"
  type: "ELU"
  bottom: "res4.3.conv1"
  top: "res4.3.conv1"
  elu_param {
    alpha: 1.6733
    lambda: 1.0507
  }
}
layer {
  name: "res4.3.conv2"
  type: "Convolution"
  bottom: "res4.3.conv1"
  top: "res4.3.conv2"
  convolution_param {
    num_output: 256
    kernel_size: 3
    pad: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "res4.3.conv2/selu"
  type: "ELU"
  bottom: "res4.3.conv2"
  top: "res4.3.conv2"
  elu_param {
    alpha: 1.6733
    lambda: 1.0507
  }
}
layer {
  name: "res4.3.conv3"
  type: "Convolution"
  bottom: "res4.3.conv2"
  top: "res4.3.conv3"
  convolution_param {
    num_output: 1024
    kernel_size: 1
    weight_filler {
      type: "msra"
    }
    bias_term: false
  }
}
layer {
  name: "res4.3.sum"
  type: "Eltwise"
  bottom: "res4.3.conv3"
  bottom: "res4.2.sum"
  top: "res4.3.sum"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "res4.3.selu"
  type: "ELU"
  bottom: "res4.3.sum"
  top: "res4.3.sum"
  elu_param {
    alpha: 1.6733
    lambda: 1.0507
  }
}
layer {
  name: "res4.4.conv1"
  type: "Convolution"
  bottom: "res4.3.sum"
  top: "res4.4.conv1"
  convolution_param {
    num_output: 256
    kernel_size: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "res4.4.conv1/selu"
  type: "ELU"
  bottom: "res4.4.conv1"
  top: "res4.4.conv1"
  elu_param {
    alpha: 1.6733
    lambda: 1.0507
  }
}
layer {
  name: "res4.4.conv2"
  type: "Convolution"
  bottom: "res4.4.conv1"
  top: "res4.4.conv2"
  convolution_param {
    num_output: 256
    kernel_size: 3
    pad: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "res4.4.conv2/selu"
  type: "ELU"
  bottom: "res4.4.conv2"
  top: "res4.4.conv2"
  elu_param {
    alpha: 1.6733
    lambda: 1.0507
  }
}
layer {
  name: "res4.4.conv3"
  type: "Convolution"
  bottom: "res4.4.conv2"
  top: "res4.4.conv3"
  convolution_param {
    num_output: 1024
    kernel_size: 1
    weight_filler {
      type: "msra"
    }
    bias_term: false
  }
}
layer {
  name: "res4.4.sum"
  type: "Eltwise"
  bottom: "res4.4.conv3"
  bottom: "res4.3.sum"
  top: "res4.4.sum"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "res4.4.selu"
  type: "ELU"
  bottom: "res4.4.sum"
  top: "res4.4.sum"
  elu_param {
    alpha: 1.6733
    lambda: 1.0507
  }
}
layer {
  name: "res4.5.conv1"
  type: "Convolution"
  bottom: "res4.4.sum"
  top: "res4.5.conv1"
  convolution_param {
    num_output: 256
    kernel_size: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "res4.5.conv1/selu"
  type: "ELU"
  bottom: "res4.5.conv1"
  top: "res4.5.conv1"
  elu_param {
    alpha: 1.6733
    lambda: 1.0507
  }
}
layer {
  name: "res4.5.conv2"
  type: "Convolution"
  bottom: "res4.5.conv1"
  top: "res4.5.conv2"
  convolution_param {
    num_output: 256
    kernel_size: 3
    pad: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "res4.5.conv2/selu"
  type: "ELU"
  bottom: "res4.5.conv2"
  top: "res4.5.conv2"
  elu_param {
    alpha: 1.6733
    lambda: 1.0507
  }
}
layer {
  name: "res4.5.conv3"
  type: "Convolution"
  bottom: "res4.5.conv2"
  top: "res4.5.conv3"
  convolution_param {
    num_output: 1024
    kernel_size: 1
    weight_filler {
      type: "msra"
    }
    bias_term: false
  }
}
layer {
  name: "res4.5.sum"
  type: "Eltwise"
  bottom: "res4.5.conv3"
  bottom: "res4.4.sum"
  top: "res4.5.sum"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "res4.5.selu"
  type: "ELU"
  bottom: "res4.5.sum"
  top: "res4.5.sum"
  elu_param {
    alpha: 1.6733
    lambda: 1.0507
  }
}
layer {
  name: "res4.6.conv1"
  type: "Convolution"
  bottom: "res4.5.sum"
  top: "res4.6.conv1"
  convolution_param {
    num_output: 256
    kernel_size: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "res4.6.conv1/selu"
  type: "ELU"
  bottom: "res4.6.conv1"
  top: "res4.6.conv1"
  elu_param {
    alpha: 1.6733
    lambda: 1.0507
  }
}
layer {
  name: "res4.6.conv2"
  type: "Convolution"
  bottom: "res4.6.conv1"
  top: "res4.6.conv2"
  convolution_param {
    num_output: 256
    kernel_size: 3
    pad: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "res4.6.conv2/selu"
  type: "ELU"
  bottom: "res4.6.conv2"
  top: "res4.6.conv2"
  elu_param {
    alpha: 1.6733
    lambda: 1.0507
  }
}
layer {
  name: "res4.6.conv3"
  type: "Convolution"
  bottom: "res4.6.conv2"
  top: "res4.6.conv3"
  convolution_param {
    num_output: 1024
    kernel_size: 1
    weight_filler {
      type: "msra"
    }
    bias_term: false
  }
}
layer {
  name: "res4.6.sum"
  type: "Eltwise"
  bottom: "res4.6.conv3"
  bottom: "res4.5.sum"
  top: "res4.6.sum"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "res4.6.selu"
  type: "ELU"
  bottom: "res4.6.sum"
  top: "res4.6.sum"
  elu_param {
    alpha: 1.6733
    lambda: 1.0507
  }
}
#
# res5
#
layer {
  name: "res5.1.conv1"
  type: "Convolution"
  bottom: "res4.6.sum"
  top: "res5.1.conv1"
  convolution_param {
    num_output: 512
    kernel_size: 1
    stride: 2
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "res5.1.conv1/selu"
  type: "ELU"
  bottom: "res5.1.conv1"
  top: "res5.1.conv1"
  elu_param {
    alpha: 1.6733
    lambda: 1.0507
  }
}
layer {
  name: "res5.1.conv2"
  type: "Convolution"
  bottom: "res5.1.conv1"
  top: "res5.1.conv2"
  convolution_param {
    num_output: 512
    kernel_size: 3
    pad: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "res5.1.conv2/selu"
  type: "ELU"
  bottom: "res5.1.conv2"
  top: "res5.1.conv2"
  elu_param {
    alpha: 1.6733
    lambda: 1.0507
  }
}
layer {
  name: "res5.1.conv3"
  type: "Convolution"
  bottom: "res5.1.conv2"
  top: "res5.1.conv3"
  convolution_param {
    num_output: 2048
    kernel_size: 1
    weight_filler {
      type: "msra"
    }
    bias_term: false
  }
}
layer {
  name: "res5.1.skipConv"
  type: "Convolution"
  bottom: "res4.6.sum"
  top: "res5.1.skipConv"
  convolution_param {
    num_output: 2048
    kernel_size: 1
    stride: 2
    weight_filler {
      type: "msra"
    }
    bias_term: false
  }
}
layer {
  name: "res5.1.sum"
  type: "Eltwise"
  bottom: "res5.1.conv3"
  bottom: "res5.1.skipConv"
  top: "res5.1.sum"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "res5.1.selu"
  type: "ELU"
  bottom: "res5.1.sum"
  top: "res5.1.sum"
  elu_param {
    alpha: 1.6733
    lambda: 1.0507
  }
}
layer {
  name: "res5.2.conv1"
  type: "Convolution"
  bottom: "res5.1.sum"
  top: "res5.2.conv1"
  convolution_param {
    num_output: 512
    kernel_size: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "res5.2.conv1/selu"
  type: "ELU"
  bottom: "res5.2.conv1"
  top: "res5.2.conv1"
  elu_param {
    alpha: 1.6733
    lambda: 1.0507
  }
}
layer {
  name: "res5.2.conv2"
  type: "Convolution"
  bottom: "res5.2.conv1"
  top: "res5.2.conv2"
  convolution_param {
    num_output: 512
    kernel_size: 3
    pad: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "res5.2.conv2/selu"
  type: "ELU"
  bottom: "res5.2.conv2"
  top: "res5.2.conv2"
  elu_param {
    alpha: 1.6733
    lambda: 1.0507
  }
}
layer {
  name: "res5.2.conv3"
  type: "Convolution"
  bottom: "res5.2.conv2"
  top: "res5.2.conv3"
  convolution_param {
    num_output: 2048
    kernel_size: 1
    weight_filler {
      type: "msra"
    }
    bias_term: false
  }
}
layer {
  name: "res5.2.sum"
  type: "Eltwise"
  bottom: "res5.2.conv3"
  bottom: "res5.1.sum"
  top: "res5.2.sum"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "res5.2.selu"
  type: "ELU"
  bottom: "res5.2.sum"
  top: "res5.2.sum"
  elu_param {
    alpha: 1.6733
    lambda: 1.0507
  }
}
layer {
  name: "res5.3.conv1"
  type: "Convolution"
  bottom: "res5.2.sum"
  top: "res5.3.conv1"
  convolution_param {
    num_output: 512
    kernel_size: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "res5.3.conv1/selu"
  type: "ELU"
  bottom: "res5.3.conv1"
  top: "res5.3.conv1"
  elu_param {
    alpha: 1.6733
    lambda: 1.0507
  }
}
layer {
  name: "res5.3.conv2"
  type: "Convolution"
  bottom: "res5.3.conv1"
  top: "res5.3.conv2"
  convolution_param {
    num_output: 512
    kernel_size: 3
    pad: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "res5.3.conv2/selu"
  type: "ELU"
  bottom: "res5.3.conv2"
  top: "res5.3.conv2"
  elu_param {
    alpha: 1.6733
    lambda: 1.0507
  }
}
layer {
  name: "res5.3.conv3"
  type: "Convolution"
  bottom: "res5.3.conv2"
  top: "res5.3.conv3"
  convolution_param {
    num_output: 2048
    kernel_size: 1
    weight_filler {
      type: "msra"
    }
    bias_term: false
  }
}
layer {
  name: "res5.3.sum"
  type: "Eltwise"
  bottom: "res5.3.conv3"
  bottom: "res5.2.sum"
  top: "res5.3.sum"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "res5.3.selu"
  type: "ELU"
  bottom: "res5.3.sum"
  top: "res5.3.sum"
  elu_param {
    alpha: 1.6733
    lambda: 1.0507
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "res5.3.sum"
  top: "pool2"
  pooling_param {
    pool: AVE
    kernel_size: 7
  }
}
layer {
  name: "fc"
  type: "InnerProduct"
  bottom: "pool2"
  top: "fc"
  inner_product_param {
    num_output: 1000
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "fc"
  bottom: "label"
  top: "loss"
 }

layer {
  name: "accuracy/top-1"
  type: "Accuracy"
  bottom: "fc"
  bottom: "label"
  top: "accuracy/top-1"
  accuracy_param { top_k: 1 }
#  include { phase: TEST }
}
layer {
  name: "accuracy/top-5"
  type: "Accuracy"
  bottom: "fc"
  bottom: "label"
  top: "accuracy/top-5"
  accuracy_param { top_k: 5 }
#  include { phase: TEST }
}
